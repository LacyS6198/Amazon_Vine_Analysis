# Analysis Overview
The purpose of this analysis was to analyze video game reviews. The analysis consisted of games with 20 or more total reviews (total reviews greater than or equal to 20). 
These reviews were then further filtered to helpful reviews. Helpful reviews were determined as having a helpful vote count (out of total votes) of greater than or equal to 50%.

After filtering the data, analysis was done based on whether it was a paid (Vine = Y) or unpaid (Vine = N) review. Analysis was then performed on both of these review types. 

## Code Snippets - Data Filtering
PySpark was used for this analysis using Google Colab. 
Below are the code snippets used to filter the data.

### Filter for games with 20 or more reviews.
```
vine_filtered_df = df.filter("total_votes>=20").select(["review_id", "star_rating", "helpful_votes", "total_votes", "vine", "verified_purchase"])
vine_filtered_df.show(5)
```

### Filter for "helpful" reviews
```
vine_filtered_df2 = vine_filtered_df.filter("(helpful_votes/total_votes)>=.5").select(["review_id", "star_rating", "helpful_votes", "total_votes", "vine", "verified_purchase"])
vine_filtered_df2.show(5)
```

#### Create dataframes for (1) Paid and (2) Unpaid reviews
```
vine_filtered_Paid_df = vine_filtered_df2.filter("vine == 'Y'").select(["review_id", "star_rating", "helpful_votes", "total_votes", "vine", "verified_purchase"])
vine_filtered_Paid_df.show(5)
```

```
vine_filtered_Unpaid_df = vine_filtered_df2.filter("vine == 'N'").select(["review_id", "star_rating", "helpful_votes", "total_votes", "vine", "verified_purchase"])
vine_filtered_Unpaid_df.show(5)
```

# Results


# Summary

